/* 
* Provider dependency injections
* It uses component entry names defined in the SORCER provider
* as defined by sorcer.core.provider.SorcerProvider.
*/
import java.util.logging.*;
import net.jini.jrmp.*;
import net.jini.jeri.*;
import net.jini.jeri.tcp.*;
import sorcer.core.*;
import net.jini.core.entry.Entry;
import net.jini.lookup.entry.*;
import sorcer.core.provider.*;
import sorcer.arithmetic.provider.*;

sorcer.core.provider.ServiceProvider {
        /* service provider genetic properties */
		name = "Arithmetic";
		description = "Arithmetic - bean provider";
		location = "Sorcersoft.com Lab";
		publishedInterfaces = new Class[] {
        			sorcer.arithmetic.provider.Adder.class,
        			sorcer.arithmetic.provider.Multiplier.class,
        			sorcer.arithmetic.provider.Subtractor.class,
        			sorcer.arithmetic.provider.Divider.class };

		spaceEnabled = true;

		// add service UI
        entries = new Entry[] {
            ArithmeticImpl.getCalculatorDescriptor(),
            new Comment("It uses sorcer.arithmetic.Arithmometer for bean implementation") };

		// remote logging
		remoteLogging=true;
		remoteLoggerManagerName="Logger";
		remoteLoggerLevel=Level.FINE;
		remoteLoggerName="remote.sorcer.ex6.provider.Arithmetic";

		// local private logging available via by RemoteLogger
		remoteContextLogging = true;
		remoteProviderLogging = true;
		
		// persist and reuse service ID
		providerIdPersistent = false;
		
		// enable monitoring
		monitorEnabled = true;
		
		// service beans	
		beanClasses = new Class[] { sorcer.arithmetic.provider.ArithmeticImpl.class };
		
		iconName="sorcer.jpg";
}
