import sorcer.provider.boot.Booter;
import sorcer.provider.boot.SorcerServiceDescriptor;
import sorcer.core.SorcerEnv;

com.sun.jini.start {
	policy = "${java.security.policy}";

	serviceDescriptors = new ServiceDescriptor[] {
		new SorcerServiceDescriptor(
			Booter.resolveCodebase(new String[]{
 				"org.sorcersoft.sorcer:ex6-api",
 				"org.sorcersoft.sorcer:sos-platform"
			}),
			policy,
			Booter.resolveClasspath(new String[] {
				"org.sorcersoft.sorcer:ex6-api",
				"org.sorcersoft.sorcer:ex6-prv"
			}),
			"sorcer.core.provider.ServiceTasker",
			new String[] { "src/main/resources/config/adder-prv.config" }
		),

		new SorcerServiceDescriptor(
 			Booter.resolveCodebase(new String[]{
 				"org.sorcersoft.sorcer:ex6-api",
 				"org.sorcersoft.sorcer:sos-platform"
			}),
			policy,
			Booter.resolveClasspath(new String[] {
				"org.sorcersoft.sorcer:ex6-api",
				"org.sorcersoft.sorcer:ex6-prv"
			}),
			"sorcer.core.provider.ServiceTasker",
			new String[] { "src/main/resources/config/multiplier-prv.config" }
		),

		new SorcerServiceDescriptor(
 			Booter.resolveCodebase(new String[]{
 				"org.sorcersoft.sorcer:ex6-api",
 				"org.sorcersoft.sorcer:sos-platform",
 			}),
			policy,
			Booter.resolveClasspath(new String[] {
				"org.sorcersoft.sorcer:ex6-api",
				"org.sorcersoft.sorcer:ex6-prv"
			}),
			"sorcer.core.provider.ServiceTasker",
			new String[] { "src/main/resources/config/divider-prv.config" }
		),

		new SorcerServiceDescriptor(
 			Booter.resolveCodebase(new String[]{
 				"org.sorcersoft.sorcer:ex6-api",
 				"org.sorcersoft.sorcer:sos-platform"
			}),
			policy,
			Booter.resolveClasspath(new String[] {
				"org.sorcersoft.sorcer:ex6-api",
				"org.sorcersoft.sorcer:ex6-prv"
			}),
			"sorcer.core.provider.ServiceTasker",
			new String[] { "src/main/resources/config/subtractor-prv.config" }
		)
	};
}
