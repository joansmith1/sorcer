/* 
* Provider dependency injections
* It uses component entry names defined in the SORCER provider
* as defined by sorcer.core.provider.SorcerProvider.
*/
import java.util.logging.*;
import net.jini.jrmp.*;
import net.jini.jeri.*;
import net.jini.jeri.tcp.*;
import java.util.logging.*;
import sorcer.core.*;
import net.jini.core.entry.Entry;
import net.jini.lookup.entry.*;
import sorcer.core.provider.*;
import sorcer.core.provider.ui.*;
import sorcer.ex5.provider.*;

sorcer.core.provider.ServiceProvider {
        /* service provider deployment properties */
		name = "Arithmetic";
		description = "Arithmetic beans provider";
		location = "Sorcersoft.com Lab";
		publishedInterfaces = new Class[] {
		    sorcer.ex5.provider.Arithmetic.class,
			sorcer.ex5.provider.Adder.class,
			sorcer.ex5.provider.Multiplier.class,
			sorcer.ex5.provider.Subtractor.class,
			sorcer.ex5.provider.Divider.class };
			
		// add service UI
		entries = new Entry[] {
			new Comment("It uses sorcer.ex5.provider.Arithmometer for bean implementation") };
			
		spaceEnabled = true;
		matchInterfaceOnly = true;
		
		// persist and reuse service ID
		providerIdPersistent = false;
		
		// remote logging
		remoteLogging=true;
		remoteLoggerManagerName="Logger";
		remoteLoggerLevel=Level.FINE;
		remoteLoggerName="remote.sorcer.provider.ArithmeticBeans";

		// local private logging available via by RemoteLogger
		remoteContextLogging = true;
		remoteProviderLogging = true;
		
		// service beans	
		beanClasses = new Class[] {
		    sorcer.ex5.provider.AdderImpl.class,
			sorcer.ex5.provider.SubtractorImpl.class,
			sorcer.ex5.provider.MultiplierImpl.class,
			sorcer.ex5.provider.DividerImpl.class };
		
		//dataContext management for this provider

		// provider's thread management
		threadManagement = true;
		maxThreads = 10;
		// 15 seconds
		threadTimeout = 15000;
		loadFactor = 3.0f;
		waitForResultIncrement = 0;

		iconName="sorcer.jpg";
}
	



