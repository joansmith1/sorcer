import java.net.URL;
import com.sun.jini.start.ServiceDescriptor;
import com.sun.jini.config.ConfigUtil;
import sorcer.provider.boot.Booter;
import sorcer.provider.boot.SorcerDescriptorUtil;
import sorcer.provider.boot.SorcerServiceDescriptor;
import sorcer.core.SorcerEnv;

com.sun.jini.start {
	home = "${sorcer.home}";
	policy = "${java.security.policy}";
	ps = System.getProperty("path.separator");

    serviceDescriptors = new ServiceDescriptor[] {
        /* SORCER Webster, set to serve up 10 directories */
        // (String policy, int port, String[] roots, String address, int startPort, int endPort, boolean debug, boolean isDaemon)
        SorcerDescriptorUtil.getWebster(policy),

        new SorcerServiceDescriptor(
        	Booter.resolveCodebase(new String[]{
        		"org.sorcersoft.sorcer:ex1-api",
        		"org.sorcersoft.sorcer:sos-platform"
        	}),
            policy,
            Booter.resolveClasspath(new String[]{
                "org.sorcersoft.sorcer:ex1-api",
            	"org.sorcersoft.sorcer:ex1-prv"
            }),
	        "sorcer.ex1.provider.WhoIsItProvider1",
          	home + "/examples/ex1/ex1-cfg1/src/main/resources/whoIsIt1-prv.config"
        ),

        new SorcerServiceDescriptor(
        	Booter.resolveCodebase(new String[]{
				"org.sorcersoft.sorcer:ex1-api",
				"org.sorcersoft.sorcer:sos-platform"
 			}),
            policy,
            Booter.resolveClasspath(new String[] {
                "org.sorcersoft.sorcer:ex1-api",
            	"org.sorcersoft.sorcer:ex1-prv"
            }),
            "sorcer.ex1.provider.WhoIsItProvider2",
          	home + "/examples/ex1/ex1-cfg2/src/main/resources/whoIsIt2-prv.config"
        )
    };
}
