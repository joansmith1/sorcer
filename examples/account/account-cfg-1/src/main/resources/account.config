/* 
* A SORCER Provider dependency injection definitions.
* It uses component entry names by sorcer.core.provider.SorcerProvider.
*/
import java.net.URL;

import net.jini.jrmp.*;
import net.jini.jeri.*;
import net.jini.jeri.tcp.*;
import net.jini.core.entry.Entry;
import net.jini.lookup.entry.*;
import net.jini.lookup.ui.MainUI;
import sorcer.core.*;
import sorcer.ui.serviceui.*;
import sorcer.jini.jeri.*;
import sorcer.core.SorcerConstants;

sorcer.core.provider.ServiceProvider {
	/* service provider generic properties */
	properties = "prv1.properties";
	name = "Account1";
	description = "Account Service 1";
	publishedInterfaces = new Class[] { sorcer.account.provider.Account.class, sorcer.account.provider.ServiceAccount.class };
	iconName="dollar.jpg";

	entries = new Entry[] {
	        UIDescriptorFactory.getUIDescriptor(MainUI.ROLE, new UIComponentFactory(new URL("artifact:org.sorcersoft.sorcer:account-sui:" + SorcerConstants.SORCER_VERSION),
                        "sorcer.account.provider.ui.AccountUI")),
            UIDescriptorFactory.getUIDescriptor(MainUI.ROLE, new UIComponentFactory(new URL("artifact:org.sorcersoft.sorcer:account-sui:" + SorcerConstants.SORCER_VERSION),
                        "sorcer.account.provider.ui.mvc.AccountView")),
			new Comment("Teaching example"),
			new Location("3", "310", "Sorcersoft.com Lab")
	};
	monitorEnabled = true;
	spaceEnabled = true;
}

sorcer.core.service.ServiceBuilder {
	type = sorcer.account.provider.AccountProvider.class;
    //exporterFactory = sorcer.container.jeri.ExporterFactories.getBasicTcp();
}
