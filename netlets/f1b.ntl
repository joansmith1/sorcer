#!/usr/bin/env nsh

codebase artifact:org.sorcersoft.sorcer/ex6-dl/pom/1.1-SNAPSHOT

import sorcer.arithmetic.provider.Adder;
import sorcer.arithmetic.provider.Multiplier;
import sorcer.arithmetic.provider.Subtractor;
import sorcer.arithmetic.provider.Divider;
//import sorcer.arithmetic.provider.Averager;
import sorcer.service.Task

//println "Codebase: " + System.getProperty("java.rmi.server.codebase");
// Service Composition f1(f2(f4, f5), f3)

/*Task t4 = task("t4", sig("multiply", Multiplier.class),
    context("multiply", input("arg/x1", 200.0), input("arg/x2", 50.0),
						result("block/result")));

Task t5 = task("t5", sig("add", Adder.class),
    context("add", input("arg/x1", 20.0), input("arg/x2", 80.0),
						result("block/result")));

block("block", context(ent("y1", 100), ent("y2", 200)),
				alt(opt(condition("{ y1, y2 -> y1 > y2 }", "y1", "y2"), t4),
					opt(condition("{ y1, y2 -> y1 <= y2 }", "y1", "y2"), t5)));
*/


Task t3 = task("t3",  sig("subtract", Subtractor.class),
        context("subtract", inEnt("arg/t4"), inEnt("arg/t5"),
                result("block/result")));

Task t4 = task("t4", sig("multiply", Multiplier.class),
        context("multiply", inEnt("arg/x1", 10.0d), inEnt("arg/x2", 50.0d),
                result("arg/t4")));

Task t5 = task("t5", sig("add", Adder.class),
        context("add", inEnt("arg/x1", 20.0d), inEnt("arg/x2", 80.0d),
                result("arg/t5")));

Task t6 = task("t6", sig("add", Adder.class),
        context("average", inEnt("arg/t4"), inEnt("arg/t5"),
                result("block/result")));

block("block", null, strategy(Monitor.YES), null, t4, t5, alt(
        opt(condition("{ t4, t5 -> t4 > t5 }", "t4", "t5"), t3), 
        opt(condition("{ t4, t5 -> t4 <= t5 }", "t4", "t5"), t6)));
