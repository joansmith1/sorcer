/* 
* Generic SORCER provider startup configuration file
*/
import java.net.URL;
import sorcer.provider.boot.Booter;
import sorcer.provider.boot.SorcerDescriptorUtil;
import com.sun.jini.start.ServiceDescriptor;
import sorcer.provider.boot.SorcerServiceDescriptor;
import sorcer.core.SorcerEnv;

com.sun.jini.start {
 	home = "${sorcer.home}";

	//port = Booter.getWebsterPort(); 
	port = 0;
	//address = Booter.getWebsterInterface();
	//startPort = Booter.getWebsterStartPort();
	//endPort = Booter.getWebsterEndPort();
	
	providerClasspath = "${sorcer.provider.classpath}";
	providerCodebaseJars = "${sorcer.provider.codebase.jars}";
	policy = "${java.security.policy}";
	implClass = "${sorcer.provider.impl}";
	providerConfig = new String[] { "${sorcer.provider.config}" };
    
    serviceDescriptors = new ServiceDescriptor[] {
        /* SORCER Webster, set to serve up root directories */
        // (String policy, int port, String[] roots, String address, int startPort, int endPort, boolean debug)
        new SorcerServiceDescriptor(null,
           			policy,
        			Booter.resolveClasspath("org.sorcersoft.sorcer:sos-webster"),
        			"sorcer.tools.webster.Webster",
        			"${sorcer.home}/bin/webster/configs/webster-prv.config"
        ),

        //SorcerDescriptorUtil.getWebster(policy, port, Booter.getWebsterRoots()),
    
		/* Provider descriptor */
		//String codebase, String policy, String classpath, String implClassName, String... serverConfigArgs)
		new SorcerServiceDescriptor(
			providerCodebaseJars,
			policy,
			providerClasspath,
		    implClass,
		    providerConfig
		)
    };
}//end com.sun.jini.start
