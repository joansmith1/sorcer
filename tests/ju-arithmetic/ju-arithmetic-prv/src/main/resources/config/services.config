import com.sun.jini.start.ServiceDescriptor;
import sorcer.provider.boot.Booter;
import sorcer.provider.boot.SorcerServiceDescriptor;
import sorcer.util.Artifact;

com.sun.jini.start {
    policy = "${java.security.policy}";
    sosPlatform = Artifact.getSosPlatform();
    runtimeClasspath = "org.sorcersoft.sorcer:sos-platform";

	serviceDescriptors = new ServiceDescriptor[] {
		new SorcerServiceDescriptor(
			Booter.resolveCodebase(new String[]{
 			    "org.sorcersoft.sorcer:ju-arithmetic-api",
 			    "org.sorcersoft.sorcer:sos-platform",
 			    "org.sorcersoft.sorcer:sos-env"
            }),
			policy,
			Booter.resolveClasspath(new String[] {
//			    "org.sorcersoft.sorcer:ju-arithmetic-api",
			    "org.sorcersoft.sorcer:ju-arithmetic-prv",
                runtimeClasspath
			}),
			"sorcer.core.provider.ServiceTasker",
			new String[] { "classpath:config/adder-prv.config" }
        ),

		new SorcerServiceDescriptor(
            Booter.resolveCodebase(new String[]{
 			    "org.sorcersoft.sorcer:ju-arithmetic-api",
 			    "org.sorcersoft.sorcer:sos-platform"
            }),
			policy,
			Booter.resolveClasspath(new String[] {
//			    "org.sorcersoft.sorcer:ju-arithmetic-api",
			    "org.sorcersoft.sorcer:ju-arithmetic-prv",
                runtimeClasspath
			}),
			"sorcer.core.provider.ServiceTasker",
			new String[] { "classpath:config/multiplier-prv.config" }
        ),

        new SorcerServiceDescriptor(
            Booter.resolveCodebase(new String[]{
 			    "org.sorcersoft.sorcer:ju-arithmetic-api",
 			    "org.sorcersoft.sorcer:sos-platform"
            }),
			policy,
            Booter.resolveClasspath(new String[] {
//			    "org.sorcersoft.sorcer:ju-arithmetic-api",
			    "org.sorcersoft.sorcer:ju-arithmetic-prv",
			    runtimeClasspath
			}),
			"sorcer.core.provider.ServiceTasker",
			new String[] { "classpath:config/divider-prv.config" }
        ),

        new SorcerServiceDescriptor(
            Booter.resolveCodebase(new String[]{
				"org.sorcersoft.sorcer:ju-arithmetic-api",
				"org.sorcersoft.sorcer:sos-platform"
            }),
            policy,
            Booter.resolveClasspath(new String[] {
//				"org.sorcersoft.sorcer:ju-arithmetic-api",
                "org.sorcersoft.sorcer:ju-arithmetic-prv",
                runtimeClasspath
            }),
            "sorcer.core.provider.ServiceTasker",
            new String[] { "classpath:config/subtractor-prv.config" }
        )
    };
}
